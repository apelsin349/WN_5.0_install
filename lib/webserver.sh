#!/bin/bash
# webserver.sh - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache/NGINX
# WorkerNet Installer v5.0

# –í—ã–±–æ—Ä –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
select_webserver() {
    if [ -n "$WEBSERVER" ] && [ "$WEBSERVER" != "auto" ]; then
        log_info "–í–µ–±-—Å–µ—Ä–≤–µ—Ä –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω: $WEBSERVER"
        return 0
    fi
    
    log_info "–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    log_info "  1) Apache (recommended for ease)"
    log_info "  2) NGINX (recommended for performance)"
    
    select webserver in "Apache" "NGINX"; do
        case $webserver in
            "Apache")
                WEBSERVER="apache"
                log_info "–í—ã–±—Ä–∞–Ω: Apache"
                break
                ;;
            "NGINX")
                WEBSERVER="nginx"
                log_info "–í—ã–±—Ä–∞–Ω: NGINX"
                break
                ;;
            *)
                log_warn "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ 1 or 2"
                ;;
        esac
    done
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache
install_apache() {
    log_section "üåê –£–°–¢–ê–ù–û–í–ö–ê APACHE"
    
    show_progress "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ idempotent
    if command_exists apache2 || command_exists httpd; then
        ok "Apache —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        return 0
    fi
    
    local os_type=$(get_os_type)
    
    case $os_type in
        ubuntu|debian)
            timed_run "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache2" \
                "apt install -y apache2"
            INSTALLED_PACKAGES+=("apache2")
            STARTED_SERVICES+=("apache2")
            
            # –í–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª–∏
            a2enmod rewrite
            a2enconf php8.3-fpm
            a2enmod proxy_fcgi setenvif
            a2enmod proxy proxy_wstunnel
            ;;
        almalinux)
            timed_run "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Apache (httpd)" \
                "dnf install -y httpd"
            INSTALLED_PACKAGES+=("httpd")
            
            run_cmd "systemctl enable httpd"
            run_cmd "systemctl start httpd"
            STARTED_SERVICES+=("httpd")
            ;;
    esac
    
    ok "Apache —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    return 0
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Apache
configure_apache() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Apache..."
    
    local os_type=$(get_os_type)
    local docroot="${INSTALL_DIR}/public"
    local domain_name="$DOMAIN"
    
    if [ "$domain_name" = "_" ]; then
        domain_name="_"
    fi
    
    # –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local apache_conf
    local php_socket
    local log_dir
    
    if [ "$os_type" = "almalinux" ]; then
        apache_conf="/etc/httpd/conf.d/workernet.conf"
        php_socket="unix:/var/opt/remi/php83/run/php-fpm/www.sock|fcgi://localhost"
        log_dir="/var/log/httpd"
    else
        apache_conf="/etc/apache2/sites-available/workernet.conf"
        php_socket="unix:/run/php/php8.3-fpm.sock|fcgi://localhost"
        log_dir="/var/log/apache2"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ñ–∏–≥ –∏ —Å–ø—Ä–æ—Å–∏—Ç—å –æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
    if [ -f "$apache_conf" ]; then
        log_warn "‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Apache —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $apache_conf"
        
        # –ï—Å–ª–∏ —Ñ–ª–∞–≥ --force-webserver-config - –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
        if [ "${FORCE_WEBSERVER_CONFIG:-false}" = "true" ]; then
            local backup_name="${apache_conf}.backup.$(date +%Y%m%d_%H%M%S)"
            log_warn "–§–ª–∞–≥ --force-webserver-config: —Å–æ–∑–¥–∞—ë–º backup –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º"
            cp "$apache_conf" "$backup_name"
            log_info "Backup —Å–æ–∑–¥–∞–Ω: $backup_name"
        # –ò–Ω–∞—á–µ - —Å–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        else
            echo ""
            log_warn "–í–ù–ò–ú–ê–ù–ò–ï: –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–∞!"
            log_info "–í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã."
            echo ""
            
            read -p "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Apache? (y/n): " -n 1 -r
            echo ""
            echo ""
            
            if [[ ! $REPLY =~ ^[Yy–î–¥]$ ]]; then
                log_info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Apache –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                log_info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª: $apache_conf"
                
                # –ó–∞–ø—É—Å—Ç–∏—Ç—å Apache –µ—Å–ª–∏ –æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–∞–∂–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ)
                local apache_service=$([ "$os_type" = "almalinux" ] && echo "httpd" || echo "apache2")
                if ! systemctl is-active --quiet "$apache_service" 2>/dev/null; then
                    log_info "–ó–∞–ø—É—Å–∫ $apache_service..."
                    systemctl start "$apache_service" 2>/dev/null || true
                fi
                
                ok "Apache –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                return 0
            fi
            
            # –°–æ–∑–¥–∞—Ç—å backup
            local backup_name="${apache_conf}.backup.$(date +%Y%m%d_%H%M%S)"
            cp "$apache_conf" "$backup_name"
            log_info "Backup —Å–æ–∑–¥–∞–Ω: $backup_name"
        fi
    fi
    
    # –°–æ–∑–¥–∞—Ç—å VirtualHost
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Apache: $apache_conf"
    cat > "$apache_conf" <<EOF
<VirtualHost *:80>
    DocumentRoot "$docroot"
    ServerName "$domain_name"
    
    ErrorLog "$log_dir/workernet.error.log"
    CustomLog "$log_dir/workernet.access.log" common
    
    LimitRequestBody 104857600
    AddDefaultCharset UTF-8
    
    <Directory "$docroot">
        Options -Indexes
        AllowOverride All
        Require all granted
        RewriteEngine On
        RewriteCond %{REQUEST_FILENAME} !-f
        
        RewriteRule ^index\.php$ - [L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.php [L]
        RedirectMatch 403 ^/\..*$
    </Directory>
    
    <FilesMatch "\.php$">
        SetHandler "proxy:$php_socket"
    </FilesMatch>
    
    <IfModule mod_proxy.c>
        <IfModule mod_proxy_wstunnel.c>
            RewriteCond %{HTTP:Upgrade} =websocket [NC]
            RewriteCond %{HTTP:Connection} upgrade [NC]
            ProxyPass /ws ws://127.0.0.1:15674/ws
            ProxyPassReverse /ws ws://127.0.0.1:15674/ws
        </IfModule>
    </IfModule>
    
    <FilesMatch "^\.ht">
        Require all denied
    </FilesMatch>
    
    RedirectMatch 200 ^/(favicon.ico|robots.txt)$
</VirtualHost>
EOF
    
    CREATED_FILES+=("$apache_conf")
    
    # –í–∫–ª—é—á–∏—Ç—å —Å–∞–π—Ç (–¥–ª—è Debian/Ubuntu)
    if [ "$os_type" != "almalinux" ]; then
        a2dissite 000-default 2>/dev/null || true
        a2ensite workernet
    fi
    
    # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π index.php
    mkdir -p "$docroot"
    echo '<?php phpinfo(); ?>' > "$docroot/index.php"
    CREATED_DIRS+=("$INSTALL_DIR" "$docroot")
    CREATED_FILES+=("$docroot/index.php")
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Apache
    local apache_service="apache2"
    if [ "$os_type" = "almalinux" ]; then
        apache_service="httpd"
    fi
    
    run_cmd "systemctl restart $apache_service"
    
    ok "Apache –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ NGINX
install_nginx() {
    log_section "üåê –£–°–¢–ê–ù–û–í–ö–ê NGINX"
    
    show_progress "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ NGINX"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ idempotent
    if command_exists nginx; then
        ok "NGINX —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        return 0
    fi
    
    local os_type=$(get_os_type)
    
    case $os_type in
        ubuntu|debian)
            # –£–¥–∞–ª–∏—Ç—å apache2 –µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
            apt remove -y nginx-common apache2 2>/dev/null || true
            run_cmd "apt update"
            
            timed_run "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ NGINX" \
                "apt-get install -y nginx"
            INSTALLED_PACKAGES+=("nginx")
            STARTED_SERVICES+=("nginx")
            ;;
        almalinux)
            timed_run "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ NGINX" \
                "dnf install -y nginx"
            INSTALLED_PACKAGES+=("nginx")
            
            run_cmd "systemctl enable nginx"
            run_cmd "systemctl start nginx"
            STARTED_SERVICES+=("nginx")
            ;;
    esac
    
    ok "NGINX —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    return 0
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ NGINX
configure_nginx() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ NGINX..."
    
    local os_type=$(get_os_type)
    local docroot="${INSTALL_DIR}/public"
    local domain_name="$DOMAIN"
    
    if [ "$domain_name" = "_" ]; then
        domain_name="_"
    fi
    
    # –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local nginx_conf
    local php_socket
    
    if [ "$os_type" = "almalinux" ]; then
        nginx_conf="/etc/nginx/conf.d/workernet.conf"
        php_socket="unix:/var/opt/remi/php83/run/php-fpm/www.sock"
    else
        nginx_conf="/etc/nginx/sites-available/workernet.conf"
        php_socket="unix:/run/php/php8.3-fpm.sock"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ñ–∏–≥ –∏ —Å–ø—Ä–æ—Å–∏—Ç—å –æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
    if [ -f "$nginx_conf" ]; then
        log_warn "‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è NGINX —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $nginx_conf"
        
        # –ï—Å–ª–∏ —Ñ–ª–∞–≥ --force-webserver-config - –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
        if [ "${FORCE_WEBSERVER_CONFIG:-false}" = "true" ]; then
            local backup_name="${nginx_conf}.backup.$(date +%Y%m%d_%H%M%S)"
            log_warn "–§–ª–∞–≥ --force-webserver-config: —Å–æ–∑–¥–∞—ë–º backup –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º"
            cp "$nginx_conf" "$backup_name"
            log_info "Backup —Å–æ–∑–¥–∞–Ω: $backup_name"
        # –ò–Ω–∞—á–µ - —Å–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        else
            echo ""
            log_warn "–í–ù–ò–ú–ê–ù–ò–ï: –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–∞!"
            log_info "–í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (SSL, —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã, –∏ —Ç.–¥.) –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã."
            echo ""
            
            read -p "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é NGINX? (y/n): " -n 1 -r
            echo ""
            echo ""
            
            if [[ ! $REPLY =~ ^[Yy–î–¥]$ ]]; then
                log_info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è NGINX –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                log_info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª: $nginx_conf"
                
                # –ó–∞–ø—É—Å—Ç–∏—Ç—å NGINX –µ—Å–ª–∏ –æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–∞–∂–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ)
                if ! systemctl is-active --quiet nginx 2>/dev/null; then
                    log_info "–ó–∞–ø—É—Å–∫ NGINX..."
                    systemctl start nginx 2>/dev/null || true
                fi
                
                ok "NGINX –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
                return 0
            fi
            
            # –°–æ–∑–¥–∞—Ç—å backup
            local backup_name="${nginx_conf}.backup.$(date +%Y%m%d_%H%M%S)"
            cp "$nginx_conf" "$backup_name"
            log_info "Backup —Å–æ–∑–¥–∞–Ω: $backup_name"
        fi
    fi
    
    # –°–æ–∑–¥–∞—Ç—å Server Block
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ NGINX: $nginx_conf"
    cat > "$nginx_conf" <<EOF
server {
    listen       80 default_server;
    server_name  $domain_name;
    charset      utf-8;
    client_max_body_size 100M;
    set \$root_path "$docroot";
    
    access_log  /var/log/nginx/workernet.access.log;
    error_log   /var/log/nginx/workernet.error.log;
    
    root \$root_path;
    index  index.php;
    
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
    
    location / {
        try_files \$uri \$uri/ /index.php\$is_args\$args;
    }
    
    location ~ \.php$ {
        try_files     \$uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass  $php_socket;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$root_path\$fastcgi_script_name;
        fastcgi_read_timeout 600;
        include       fastcgi_params;
    }
    
    location /ws {
        proxy_pass http://127.0.0.1:15674/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host \$host;
    }
    
    location ~ /\.ht { 
        deny  all; 
    }
}
EOF
    
    CREATED_FILES+=("$nginx_conf")
    
    # –°–æ–∑–¥–∞—Ç—å —Å–∏–º–ª–∏–Ω–∫ (–¥–ª—è Debian/Ubuntu)
    if [ "$os_type" != "almalinux" ]; then
        ln -sf "$nginx_conf" /etc/nginx/sites-enabled/
        rm -f /etc/nginx/sites-enabled/default
    fi
    
    # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π index.php
    mkdir -p "$docroot"
    echo '<?php phpinfo(); ?>' > "$docroot/index.php"
    CREATED_DIRS+=("$INSTALL_DIR" "$docroot")
    CREATED_FILES+=("$docroot/index.php")
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å NGINX
    run_cmd "systemctl restart nginx"
    
    ok "NGINX –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
verify_webserver() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞..."
    
    local service_name
    
    if [ "$WEBSERVER" = "apache" ]; then
        service_name="apache2"
        if [ "$(get_os_type)" = "almalinux" ]; then
            service_name="httpd"
        fi
    else
        service_name="nginx"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    if ! is_service_active "$service_name"; then
        log_error "–°–µ—Ä–≤–∏—Å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
    ok "–°–µ—Ä–≤–∏—Å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–ø—É—â–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP
    sleep 2  # –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    
    if curl -f -s http://localhost/ > /dev/null; then
        ok "–í–µ–±-—Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç on http://localhost/"
    else
        log_warn "–í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (may need additional configuration)"
    fi
    
    return 0
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
setup_webserver() {
    # –ü—Ä–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ: –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
    local webserver_services=("apache2" "httpd" "nginx")
    local stopped=false
    
    for service in "${webserver_services[@]}"; do
        if systemctl is-active --quiet "$service" 2>/dev/null; then
            log_info "–û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—É—â–µ–Ω–Ω—ã–π $service (–ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞)"
            log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ $service –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–æ–π..."
            
            systemctl stop "$service" 2>/dev/null || true
            pkill -9 "$service" 2>/dev/null || true
            sleep 1
            
            ok "$service –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏"
            stopped=true
        fi
    done
    
    [ "$stopped" = true ] && sleep 2
    
    select_webserver
    
    if [ "$WEBSERVER" = "apache" ]; then
        install_apache || return 1
        configure_apache || return 1
    else
        install_nginx || return 1
        configure_nginx || return 1
    fi
    
    verify_webserver || return 1
    
    return 0
}

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏
export -f select_webserver
export -f install_apache
export -f configure_apache
export -f install_nginx
export -f configure_nginx
export -f verify_webserver
export -f setup_webserver

