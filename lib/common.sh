#!/bin/bash
# common.sh - –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
# WorkerNet Installer v5.0

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly SCRIPT_VERSION="5.0"
readonly MIN_DISK_GB=10
readonly MIN_RAM_GB=2
readonly MIN_CPU_CORES=2

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
readonly INSTALL_DIR="/var/www/workernet"
readonly LOG_DIR="/var/log/workernet"
readonly LOCK_DIR="/var/log/workernet"
readonly BACKUP_DIR="/var/backups/workernet"

# –§–∞–π–ª—ã
readonly LOCK_FILE="${LOCK_DIR}/workernet.lock"
readonly INSTALL_LOG="${LOG_DIR}/install_$(date +%Y%m%d_%H%M%S).log"
readonly STATE_FILE="${LOCK_DIR}/install_state.json"
readonly CREDENTIALS_FILE="${LOCK_DIR}/install_credentials.env"

# –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–¥—É–ª—è—Ö)
readonly LOG_FILE="$INSTALL_LOG"

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
readonly DB_NAME="workernet"
readonly DB_USER="root"

# –ü–æ—Ä—Ç—ã
readonly PORTS_TO_CHECK=(80 443 5432 6379 5672 15672 15674)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
readonly COLOR_RESET="\033[0m"
readonly COLOR_RED="\033[1;31m"
readonly COLOR_GREEN="\033[1;32m"
readonly COLOR_YELLOW="\033[1;33m"
readonly COLOR_BLUE="\033[1;34m"
readonly COLOR_CYAN="\033[0;36m"
readonly COLOR_GRAY="\033[0;90m"

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
declare -a INSTALLED_PACKAGES=()
declare -a CREATED_DIRS=()
declare -a CREATED_FILES=()
declare -a CREATED_USERS=()
declare -a CREATED_DATABASES=()
declare -a STARTED_SERVICES=()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
# DOMAIN –∏ WEBSERVER —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ –∏–ª–∏ —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
DOMAIN=""
WEBSERVER=""
GENPASSDB=""
GENHASH=""
NAMERABBITADMIN="admin"
GENPASSRABBITADMIN=""
NAMERABBITUSER="workernet"
GENPASSRABBITUSER=""
WEBSTOMPUSER="workernet-stomp"
GENPASSWEBSTOMPUSER=""

# –§—É–Ω–∫—Ü–∏–∏ —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_color() {
    local color=$1
    shift
    echo -e "${color}$@${COLOR_RESET}"
}

# –£—Ç–∏–ª–∏—Ç—ã
generate_password() {
    local length=${1:-13}
    tr -dc A-Za-z0-9 </dev/urandom | head -c "$length"
}

generate_hash() {
    echo | sha256sum | cut -d" " -f1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ –æ—Ç root
is_root() {
    [ "$(id -u)" -eq 0 ]
}

# –ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø –û–°
get_os_type() {
    grep "^ID=" /etc/os-release | cut -f 2 -d '=' | tr -d '"'
}

# –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –û–°
get_os_version() {
    grep "^VERSION_ID=" /etc/os-release | cut -f 2 -d '=' | tr -d '"' | cut -d '.' -f 1
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–º–∞–Ω–¥–∞
command_exists() {
    command -v "$1" &> /dev/null
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å
is_service_active() {
    systemctl is-active "$1" &> /dev/null
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
database_exists() {
    local dbname=$1
    sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw "$dbname"
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å PostgreSQL
postgres_user_exists() {
    local username=$1
    sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='$username'" | grep -q 1
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç
is_port_in_use() {
    local port=$1
    ss -tuln | grep -q ":${port} "
}

# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
save_install_state() {
    local state=$1
    local message=$2
    
    cat > "$STATE_FILE" <<EOF
{
  "state": "$state",
  "message": "$message",
  "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
  "packages": $(printf '%s\n' "${INSTALLED_PACKAGES[@]}" | jq -R . | jq -s .),
  "databases": $(printf '%s\n' "${CREATED_DATABASES[@]}" | jq -R . | jq -s .),
  "users": $(printf '%s\n' "${CREATED_USERS[@]}" | jq -R . | jq -s .)
}
EOF
}

# –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
load_install_state() {
    if [ -f "$STATE_FILE" ]; then
        return 0
    fi
    return 1
}

# ASCII –ª–æ–≥–æ
print_logo() {
    print_color "$COLOR_BLUE" '
__          __        _             _   _      _
\ \        / /       | |           | \ | |    | |
 \ \  /\  / /__  _ __| | _____ _ __|  \| | ___| |_
  \ \/  \/ / _ \| '"'"'__| |/ / _ \ '"'"'__| . ` |/ _ \ __|
   \  /\  / (_) | |  |   <  __/ |  | |\  |  __/ |_
    \/  \/ \___/|_|  |_|\_\___|_|  |_| \_|\___|\__|
'
    print_color "$COLOR_CYAN" "    Installer v${SCRIPT_VERSION} - Improved Edition"
    echo ""
}

# –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_system_info() {
    local kernel=$(uname -r -m)
    local mem_total=$(free -m | awk '/Mem:/ {print $2}')
    local mem_used=$(free -m | awk '/Mem:/ {print $3}')
    local mem_percent=$(awk "BEGIN {printf \"%.2f\", ($mem_used/$mem_total)*100}")
    local disk_info=$(df -h / | awk 'NR==2 {print $5 " used, Total: " $2 ", Free: " $4}')
    local load_avg=$(awk '{print $1 " " $2 " " $3}' /proc/loadavg)
    local uptime=$(uptime -p | sed 's/up //')
    local users=$(who | wc -l)
    
    echo "$(print_color $COLOR_CYAN "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")"
    printf "    $(print_color $COLOR_YELLOW "KERNEL"):  %s\n" "$kernel"
    printf "    $(print_color $COLOR_YELLOW "MEMORY"):  %d MB / %d MB - %.2f%% (Used)\n" "$mem_used" "$mem_total" "$mem_percent"
    printf "  $(print_color $COLOR_YELLOW "USE DISK"):  %s\n" "$disk_info"
    echo "$(print_color $COLOR_CYAN "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")"
    printf "  $(print_color $COLOR_YELLOW "LOAD AVG"):  %s\n" "$load_avg"
    printf "    $(print_color $COLOR_YELLOW "UPTIME"):  %s\n" "$uptime"
    printf "     $(print_color $COLOR_YELLOW "USERS"):  %d users logged in\n" "$users"
    echo "$(print_color $COLOR_CYAN "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")"
    echo ""
}

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏
export -f print_color
export -f generate_password
export -f generate_hash
export -f is_root
export -f get_os_type
export -f get_os_version
export -f command_exists
export -f is_service_active
export -f database_exists
# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø–∞–∫–µ—Ç–∞
check_package_version() {
    local package=$1
    local min_version=$2
    local current_version=""
    
    case $(get_os_type) in
        ubuntu|debian)
            current_version=$(apt-cache policy "$package" 2>/dev/null | grep "Installed:" | awk '{print $2}' | head -1)
            ;;
        almalinux)
            current_version=$(rpm -q --queryformat '%{VERSION}' "$package" 2>/dev/null || echo "")
            ;;
    esac
    
    if [ -z "$current_version" ]; then
        log_debug "–ü–∞–∫–µ—Ç $package –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 1
    fi
    
    log_debug "–í–µ—Ä—Å–∏—è –ø–∞–∫–µ—Ç–∞ $package: $current_version"
    
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
    if [ -n "$min_version" ]; then
        if [ "$current_version" = "$min_version" ] || [ "$current_version" \> "$min_version" ]; then
            log_debug "–í–µ—Ä—Å–∏—è $package ($current_version) >= $min_version"
            return 0
        else
            log_warn "–í–µ—Ä—Å–∏—è $package ($current_version) < $min_version"
            return 1
        fi
    fi
    
    return 0
}

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏
diagnose_error() {
    local component=$1
    local error=$2
    local exit_code=$3
    
    log_error "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    log_error "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò"
    log_error "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    log_error "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç: $component"
    log_error "–û—à–∏–±–∫–∞: $error"
    log_error "–ö–æ–¥ –≤—ã—Ö–æ–¥–∞: $exit_code"
    log_error ""
    
    # –û–±—â–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    log_error "üìä –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´:"
    log_error "OS: $(get_os_type) $(get_os_version)"
    log_error "RAM: $(free -h | awk '/Mem:/ {print $3 "/" $2}')"
    log_error "Disk: $(df -h / | awk 'NR==2 {print $3 "/" $2 " (" $5 ")"}')"
    log_error "Load: $(uptime | awk -F'load average:' '{print $2}')"
    log_error ""
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
    case $component in
        "postgresql"|"database")
            log_error "üóÑÔ∏è –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê POSTGRESQL:"
            log_error "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
            systemctl status postgresql 2>&1 | head -10 || true
            log_error ""
            log_error "–ü–æ—Ä—Ç—ã:"
            ss -tlnp | grep :5432 || log_error "  –ü–æ—Ä—Ç 5432 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
            log_error ""
            log_error "–ü—Ä–æ—Ü–µ—Å—Å—ã:"
            ps aux | grep postgres | head -5 || log_error "  –ü—Ä–æ—Ü–µ—Å—Å—ã PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            ;;
        "redis"|"cache")
            log_error "üíæ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê REDIS:"
            log_error "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
            systemctl status redis 2>&1 | head -10 || true
            log_error ""
            log_error "–ü–æ—Ä—Ç—ã:"
            ss -tlnp | grep :6379 || log_error "  –ü–æ—Ä—Ç 6379 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
            ;;
        "rabbitmq"|"queue")
            log_error "üì® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê RABBITMQ:"
            log_error "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
            systemctl status rabbitmq-server 2>&1 | head -10 || true
            log_error ""
            log_error "–ü–æ—Ä—Ç—ã:"
            ss -tlnp | grep :5672 || log_error "  –ü–æ—Ä—Ç 5672 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
            ss -tlnp | grep :15672 || log_error "  –ü–æ—Ä—Ç 15672 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
            ;;
        "php"|"backend")
            log_error "‚öôÔ∏è –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PHP:"
            if command_exists php; then
                log_error "–í–µ—Ä—Å–∏—è PHP: $(php -v | head -1)"
                log_error "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è:"
                php -m | grep -E "(pgsql|redis|curl|mbstring)" || log_error "  –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            else
                log_error "  PHP –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
            ;;
        "apache"|"nginx"|"webserver")
            log_error "üåê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í–ï–ë-–°–ï–†–í–ï–†–ê:"
            if [ "$WEBSERVER" = "apache" ]; then
                local apache_service=$(get_apache_service_name)
                log_error "–°—Ç–∞—Ç—É—Å Apache ($apache_service):"
                systemctl status "$apache_service" 2>&1 | head -10 || true
            else
                log_error "–°—Ç–∞—Ç—É—Å NGINX:"
                systemctl status nginx 2>&1 | head -10 || true
            fi
            log_error ""
            log_error "–ü–æ—Ä—Ç—ã:"
            ss -tlnp | grep -E ":(80|443)" || log_error "  –ü–æ—Ä—Ç—ã 80/443 –Ω–µ —Å–ª—É—à–∞—é—Ç—Å—è"
            ;;
    esac
    
    log_error ""
    log_error "üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    log_error "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -f /var/log/workernet/install_*.log"
    log_error "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: df -h"
    log_error "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–º—è—Ç—å: free -h"
    log_error "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É: sudo ./install.sh --force"
    log_error "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–µ—Ä—Å–∏—è–º
check_minimum_versions() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –≤–µ—Ä—Å–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    
    local errors=0
    
    # PostgreSQL
    if command_exists psql; then
        local pg_version=$(psql --version 2>/dev/null | grep -oP '\d+\.\d+' | head -1)
        if [ -n "$pg_version" ]; then
            if [ "${pg_version%%.*}" -ge 14 ]; then
                log_debug "PostgreSQL $pg_version (—Ç—Ä–µ–±—É–µ—Ç—Å—è 14+)"
            else
                log_warn "PostgreSQL $pg_version (—Ç—Ä–µ–±—É–µ—Ç—Å—è 14+)"
                ((errors++))
            fi
        fi
    fi
    
    # PHP
    if command_exists php; then
        local php_version=$(php -v 2>/dev/null | grep -oP '\d+\.\d+' | head -1)
        if [ -n "$php_version" ]; then
            if [ "${php_version%%.*}" -ge 8 ]; then
                log_debug "PHP $php_version (—Ç—Ä–µ–±—É–µ—Ç—Å—è 8+)"
            else
                log_warn "PHP $php_version (—Ç—Ä–µ–±—É–µ—Ç—Å—è 8+)"
                ((errors++))
            fi
        fi
    fi
    
    # Python
    if command_exists python3; then
        local python_version=$(python3 --version 2>/dev/null | grep -oP '\d+\.\d+' | head -1)
        if [ -n "$python_version" ]; then
            if [ "${python_version%%.*}" -ge 3 ]; then
                log_debug "Python $python_version (—Ç—Ä–µ–±—É–µ—Ç—Å—è 3+)"
            else
                log_warn "Python $python_version (—Ç—Ä–µ–±—É–µ—Ç—Å—è 3+)"
                ((errors++))
            fi
        fi
    fi
    
    if [ $errors -eq 0 ]; then
        log_debug "–í—Å–µ –≤–µ—Ä—Å–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º"
        return 0
    else
        log_warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏ –≤–µ—Ä—Å–∏—è–º–∏"
        return 1
    fi
}

# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
save_credentials() {
    local key="$1"
    local value="$2"
    
    # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p "$(dirname "$CREDENTIALS_FILE")"
    
    # –î–æ–±–∞–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –≤ —Ñ–∞–π–ª–µ
    if [ -f "$CREDENTIALS_FILE" ]; then
        # –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        sed -i "/^${key}=/d" "$CREDENTIALS_FILE" 2>/dev/null || true
    fi
    
    # –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    echo "${key}=${value}" >> "$CREDENTIALS_FILE"
    chmod 600 "$CREDENTIALS_FILE"  # –¢–æ–ª—å–∫–æ root –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å
    
    log_debug "–°–æ—Ö—Ä–∞–Ω—ë–Ω –ø–∞—Ä–æ–ª—å: $key"
}

# –ó–∞–≥—Ä—É–∑–∏—Ç—å —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
load_credentials() {
    if [ -f "$CREDENTIALS_FILE" ]; then
        # –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
        set -a  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π export –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        source "$CREDENTIALS_FILE" 2>/dev/null || true
        set +a
        log_debug "–£—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ $CREDENTIALS_FILE"
        return 0
    else
        log_debug "–§–∞–π–ª —É—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: $CREDENTIALS_FILE"
        return 1
    fi
}

export -f save_credentials
export -f load_credentials
export -f postgres_user_exists
export -f is_port_in_use
export -f save_install_state
export -f load_install_state
export -f print_logo
export -f print_system_info
export -f check_package_version
export -f check_minimum_versions
export -f diagnose_error

# ============================================================================
# DEBIAN –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò
# ============================================================================

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è apt update
APT_UPDATED=false

# –£–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è apt update (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É)
smart_apt_update() {
    if [ "$APT_UPDATED" = true ]; then
        log_debug "apt update —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        return 0
    fi
    
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø–∞–∫–µ—Ç–æ–≤ apt..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ apt
    if fuser /var/lib/apt/lists/lock >/dev/null 2>&1; then
        if command -v wait_for_apt_lock &>/dev/null; then
            wait_for_apt_lock || return 1
        else
            log_warn "apt –∑–∞–Ω—è—Ç, –æ–∂–∏–¥–∞–µ–º 10 —Å–µ–∫—É–Ω–¥..."
            sleep 10
        fi
    fi
    
    # Retry –º–µ—Ö–∞–Ω–∏–∑–º (3 –ø–æ–ø—ã—Ç–∫–∏)
    local retries=0
    while [ $retries -lt 3 ]; do
        if apt-get update 2>&1 | tee -a "${LOG_FILE:-/dev/null}" | \
           grep -v "^WARNING:" | tail -10; then
            APT_UPDATED=true
            ok "–°–ø–∏—Å–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
            return 0
        fi
        retries=$((retries + 1))
        if [ $retries -lt 3 ]; then
            log_warn "apt update –Ω–µ —É–¥–∞–ª—Å—è, –ø–æ–ø—ã—Ç–∫–∞ $retries/3. –û–∂–∏–¥–∞–µ–º 10 —Å–µ–∫—É–Ω–¥..."
            sleep 10
        fi
    done
    
    log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å apt –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ apt update (–¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏–ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
reset_apt_cache() {
    APT_UPDATED=false
    log_debug "–§–ª–∞–≥ apt update —Å–±—Ä–æ—à–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Debian/Ubuntu
install_common_dependencies_debian() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Debian/Ubuntu..."
    
    local common_deps=(
        "curl"                      # –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        "wget"                      # Fallback –¥–ª—è curl
        "gnupg2"                    # –î–ª—è GPG –∫–ª—é—á–µ–π
        "ca-certificates"           # –î–ª—è HTTPS
        "apt-transport-https"       # –î–ª—è HTTPS —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        "lsb-release"              # –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
        "software-properties-common" # –î–ª—è add-apt-repository (Ubuntu)
    )
    
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${common_deps[*]}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
    if fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; then
        if command -v wait_for_apt_lock &>/dev/null; then
            wait_for_apt_lock || return 1
        else
            sleep 10
        fi
    fi
    
    if apt-get install -y "${common_deps[@]}" 2>&1 | \
       grep -v "^WARNING:\|^Get:\|^Fetched" | tail -10; then
        ok "–û–±—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        INSTALLED_PACKAGES+=("${common_deps[@]}")
        return 0
    else
        log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        return 0  # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
    fi
}

# –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫ apt
diagnose_apt_failure() {
    local exit_code=$1
    local command=$2
    
    log_error "‚ùå –ö–æ–º–∞–Ω–¥–∞ apt –Ω–µ —É–¥–∞–ª–∞—Å—å (exit code: $exit_code)"
    log_error "–ö–æ–º–∞–Ω–¥–∞: $command"
    log_error ""
    
    log_info "üìã –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ apt:"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    if fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; then
        local pid=$(fuser /var/lib/dpkg/lock-frontend 2>&1 | awk '{print $NF}')
        log_error "  ‚ö†Ô∏è  dpkg –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ—Ü–µ—Å—Å–æ–º: $pid"
        if ps -p "$pid" -o comm= 2>/dev/null; then
            log_error "     –ü—Ä–æ—Ü–µ—Å—Å: $(ps -p "$pid" -o comm= 2>/dev/null)"
        fi
    fi
    
    if fuser /var/lib/apt/lists/lock >/dev/null 2>&1; then
        local pid=$(fuser /var/lib/apt/lists/lock 2>&1 | awk '{print $NF}')
        log_error "  ‚ö†Ô∏è  apt lists –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–º: $pid"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    if df -h /var/lib/apt/lists/ 2>/dev/null | tail -1 | awk '{print $5}' | grep -q "100%"; then
        log_error "  ‚ö†Ô∏è  –î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ 100%"
    else
        local df_output=$(df -h /var/lib/apt/lists/ 2>/dev/null | tail -1)
        log_info "  üíæ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ: $df_output"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if ! ping -c 1 8.8.8.8 >/dev/null 2>&1; then
        log_error "  ‚ö†Ô∏è  –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
    if ! nslookup deb.debian.org >/dev/null 2>&1; then
        log_error "  ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å DNS"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ —á–µ—Ä–µ–∑ apt-cache policy
    log_error ""
    log_info "üì¶ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:"
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ apt-cache —Ä–∞–±–æ—Ç–∞–µ—Ç
    if apt-cache policy >/dev/null 2>&1; then
        log_info "  ‚úÖ apt-cache policy —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ Debian/Ubuntu
        if apt-cache policy 2>/dev/null | grep -q "debian.org\|ubuntu.com"; then
            log_info "  ‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
        else
            log_error "  ‚ùå –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        local repos=(
            "apt.postgresql.org:PostgreSQL"
            "packages.sury.org/php:PHP (Sury)"
        )
        
        for repo_info in "${repos[@]}"; do
            local repo="${repo_info%%:*}"
            local name="${repo_info##*:}"
            
            if apt-cache policy 2>/dev/null | grep -q "$repo"; then
                log_info "  ‚úÖ $name —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∞–∫—Ç–∏–≤–µ–Ω"
            else
                log_warn "  ‚ö†Ô∏è  $name —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            fi
        done
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
        log_error ""
        log_info "üìã –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤:"
        for pkg in postgresql-16 php8.3 rabbitmq-server; do
            local version=$(apt-cache policy "$pkg" 2>/dev/null | \
                            grep "Candidate:" | awk '{print $2}')
            if [ -n "$version" ] && [ "$version" != "(none)" ]; then
                log_info "  ‚úÖ $pkg: $version"
            else
                log_warn "  ‚ö†Ô∏è  $pkg: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            fi
        done
    else
        log_error "  ‚ùå apt-cache policy –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–±–∏—Ç—ã–µ —Ñ–∞–π–ª—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤?)"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –±–∏—Ç—ã–µ —Ñ–∞–π–ª—ã
        log_error ""
        log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:"
        for file in /etc/apt/sources.list.d/*.list; do
            if [ -f "$file" ]; then
                if grep -v "^#" "$file" | grep -v "^$" >/dev/null 2>&1; then
                    log_debug "  üìÑ $file"
                    # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª
                    if ! cat "$file" >/dev/null 2>&1; then
                        log_error "    ‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª"
                    elif ! grep -E "^deb " "$file" >/dev/null 2>&1; then
                        log_warn "    ‚ö†Ô∏è  –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π 'deb'"
                    else
                        log_debug "    ‚úÖ –§–∞–π–ª –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
                    fi
                fi
            fi
        done
    fi
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    log_error ""
    log_error "üîß –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:"
    log_error "  1. –û—Å–≤–æ–±–æ–¥–∏—Ç—å apt: sudo killall apt apt-get"
    log_error "  2. –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à: sudo apt clean"
    log_error "  3. –£–¥–∞–ª–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: sudo rm /var/lib/apt/lists/lock"
    log_error "  4. –ü–µ—Ä–µ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞—Ç—å dpkg: sudo dpkg --configure -a"
    log_error "  5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç: ping 8.8.8.8"
    log_error "  6. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å DNS: nslookup deb.debian.org"
    log_error "  7. –£–¥–∞–ª–∏—Ç—å –±–∏—Ç—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏: ls /etc/apt/sources.list.d/"
    log_error "  8. –û–±–Ω–æ–≤–∏—Ç—å apt: sudo apt update"
    log_error ""
}

# –≠–∫—Å–ø–æ—Ä—Ç –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
export -f smart_apt_update
export -f reset_apt_cache
export -f install_common_dependencies_debian
export -f diagnose_apt_failure

