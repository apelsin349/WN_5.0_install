#!/bin/bash
# finalize.sh - –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
# WorkerNet Installer v5.0

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall (iptables)
setup_firewall() {
    log_section "üî• –ù–ê–°–¢–†–û–ô–ö–ê FIREWALL"
    
    show_progress "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall"
    
    local os_type=$(get_os_type)
    
    case $os_type in
        ubuntu|debian)
            setup_firewall_debian
            ;;
        almalinux)
            setup_firewall_almalinux
            ;;
    esac
    
    ok "Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    return 0
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall –¥–ª—è Debian/Ubuntu
setup_firewall_debian() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables –¥–ª—è Debian/Ubuntu..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å ufw
    systemctl stop ufw 2>/dev/null || true
    ufw disable 2>/dev/null || true
    apt remove --auto-remove ufw -y 2>/dev/null || true
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å nftables (Debian)
    if [ "$(get_os_type)" = "debian" ]; then
        systemctl stop nftables 2>/dev/null || true
        systemctl disable nftables 2>/dev/null || true
        apt remove --purge nftables -y 2>/dev/null || true
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å iptables-persistent
    DEBIAN_FRONTEND=noninteractive apt install -y iptables-persistent
    INSTALLED_PACKAGES+=("iptables-persistent")
    
    # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
    apply_iptables_rules
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
    service netfilter-persistent save
    systemctl start iptables
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall –¥–ª—è AlmaLinux
setup_firewall_almalinux() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables –¥–ª—è AlmaLinux..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –æ—Ç–∫–ª—é—á–∏—Ç—å firewalld
    systemctl stop firewalld 2>/dev/null || true
    systemctl disable firewalld 2>/dev/null || true
    dnf remove -y firewalld 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å iptables
    dnf install -y iptables iptables-services
    INSTALLED_PACKAGES+=("iptables" "iptables-services")
    
    systemctl enable iptables
    systemctl start iptables
    STARTED_SERVICES+=("iptables")
    
    # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
    apply_iptables_rules
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
    service iptables save
}

# –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ iptables
apply_iptables_rules() {
    log_info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª iptables..."
    
    # –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã
    iptables -F
    iptables -t nat -F
    iptables -t mangle -F
    iptables -X
    
    # –ü–æ–ª–∏—Ç–∏–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    iptables -P INPUT DROP
    iptables -P OUTPUT DROP
    iptables -P FORWARD DROP
    
    # –†–∞–∑—Ä–µ—à–∏—Ç—å —Ç—Ä–∞—Ñ–∏–∫ –ø–æ –ø–µ—Ç–ª–µ–≤–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    iptables -A INPUT -i lo -j ACCEPT
    iptables -A OUTPUT -o lo -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Ö–æ–¥—è—â–∏–π PING
    iptables -A INPUT -p icmp -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ –∏—Å—Ö–æ–¥—è—â–∏–µ
    iptables -I OUTPUT 1 -j ACCEPT
    
    # –î–æ—Å—Ç—É–ø –ø–æ SSH
    iptables -A INPUT -p tcp --dport 22 -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ WEB —Å–µ—Ä–≤–µ—Ä—É
    iptables -A INPUT -p tcp --dport 80 -j ACCEPT
    iptables -A INPUT -p tcp --dport 443 -j ACCEPT
    
    # –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ RabbitMQ Management (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫—Ä—ã—Ç—å –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
    iptables -A INPUT -p tcp --dport 15672 -j ACCEPT
    
    ok "–ü—Ä–∞–≤–∏–ª–∞ iptables –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
create_env_file() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    
    local env_file="${INSTALL_DIR}/.env"
    local domain_for_url="$DOMAIN"
    
    if [ "$domain_for_url" = "_" ]; then
        domain_for_url="127.0.0.1"
    fi
    
    # –°–æ–∑–¥–∞—Ç—å .env
    cat > "$env_file" <<EOF
URL=http://$domain_for_url/
DB_DSN=pgsql:host=127.0.0.1;port=5432;dbname=$DB_NAME
DB_USER=$DB_USER
DB_PASS=$GENPASSDB
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=$GENHASH
AMQP_DSN=amqp://$NAMERABBITUSER:$GENPASSRABBITUSER@127.0.0.1:5672/%2f
EOF
    
    CREATED_FILES+=("$env_file")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞
    chmod 640 "$env_file"
    
    ok ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: $env_file"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
set_permissions() {
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    
    local os_type=$(get_os_type)
    local web_user="www-data"
    local web_group="www-data"
    
    if [ "$os_type" = "almalinux" ]; then
        if [ "$WEBSERVER" = "apache" ]; then
            web_user="apache"
            web_group="apache"
        else
            web_user="nginx"
            web_group="nginx"
        fi
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞
    chown -R $web_user:$web_group "$INSTALL_DIR"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞
    chmod -R u=rwX,g=rwX "$INSTALL_DIR"
    
    ok "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: $web_user:$web_group"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ workernet_install.phar
download_installer_phar() {
    log_info "–ó–∞–≥—Ä—É–∑–∫–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ WorkerNet (phar)..."
    log_info "–í–µ—Ä—Å–∏—è: $WORKERNET_VERSION"
    
    local phar_file="${INSTALL_DIR}/workernet_install.phar"
    local phar_url=$(get_phar_url "$WORKERNET_VERSION")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ idempotent
    if [ -f "$phar_file" ]; then
        ok "Phar —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏"
        return 0
    fi
    
    cd "$INSTALL_DIR"
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ PHP
    if php -r "copy('$phar_url', 'workernet_install.phar');" ; then
        ok "Phar —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        CREATED_FILES+=("$phar_file")
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å phar —Ñ–∞–π–ª"
        log_warn "–ü–æ–ø—ã—Ç–∫–∞ —Å curl..."
        
        if curl -f -L -o "$phar_file" "$phar_url"; then
            ok "Phar —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ curl"
            CREATED_FILES+=("$phar_file")
        else
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å phar —Ñ–∞–π–ª with curl"
            return 1
        fi
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ phar —Ñ–∞–π–ª (–∫—Ä–∏—Ç–∏—á–Ω–æ!)
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ phar —Ñ–∞–π–ª..."
    chown www-data:www-data "$phar_file"
    chmod 775 "$phar_file"  # Writable –¥–ª—è owner –∏ group
    ok "–ü—Ä–∞–≤–∞ –Ω–∞ phar —Ñ–∞–π–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (www-data:www-data, 775)"
    
    return 0
}

# –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
run_phar_installer() {
    log_info "–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ WorkerNet phar..."
    
    local os_type=$(get_os_type)
    local web_user="www-data"
    
    if [ "$os_type" = "almalinux" ]; then
        # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        web_user=$(stat -c '%U' "${INSTALL_DIR}/workernet_install.phar" 2>/dev/null || echo "www-data")
    fi
    
    cd "$INSTALL_DIR"
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –æ—Ç –∏–º–µ–Ω–∏ –≤–µ–±-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if sudo -u $web_user php workernet_install.phar install; then
        ok "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WorkerNet —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log_error "–£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ phar –Ω–µ —É–¥–∞–ª—Å—è"
        return 1
    fi
}

# –ü–æ–∫–∞–∑ –ø–∞—Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
show_credentials() {
    log_section "üîë –ü–ê–†–ê–ú–ï–¢–†–´ –£–°–¢–ê–ù–û–í–ö–ò"
    
    print_color "$COLOR_CYAN" "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    print_color "$COLOR_BLUE" "  –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø: WorkerNet $WORKERNET_VERSION"
    print_color "$COLOR_BLUE" "  –ü—Ä–µ—Ñ–∏–∫—Å –º–æ–¥—É–ª–µ–π: $(get_module_prefix)_*"
    print_color "$COLOR_CYAN" "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
    print_color "$COLOR_GREEN" "  PostgreSQL database name: $DB_NAME"
    print_color "$COLOR_GREEN" "  PostgreSQL username: $DB_USER"
    print_color "$COLOR_GREEN" "  PostgreSQL password: $GENPASSDB"
    echo ""
    print_color "$COLOR_GREEN" "  Redis password: $GENHASH"
    echo ""
    print_color "$COLOR_GREEN" "  RabbitMQ admin user: $NAMERABBITADMIN"
    print_color "$COLOR_GREEN" "  RabbitMQ admin password: $GENPASSRABBITADMIN"
    print_color "$COLOR_GREEN" "  RabbitMQ workernet user: $NAMERABBITUSER"
    print_color "$COLOR_GREEN" "  RabbitMQ workernet password: $GENPASSRABBITUSER"
    print_color "$COLOR_GREEN" "  RabbitMQ WebSocket user: $WEBSTOMPUSER"
    print_color "$COLOR_GREEN" "  RabbitMQ WebSocket password: $GENPASSWEBSTOMPUSER"
    print_color "$COLOR_CYAN" "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo ""
    print_color "$COLOR_YELLOW" "‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!"
    echo ""
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π..."
}

# –ó–∞–ø–∏—Å—å lock-—Ñ–∞–π–ª–∞
write_lock_file() {
    log_info "–ó–∞–ø–∏—Å—å lock —Ñ–∞–π–ª–∞..."
    
    local lock_value=$(get_lock_value "$WORKERNET_VERSION")
    echo "$lock_value" > "$LOCK_FILE"
    
    log_info "–í–µ—Ä—Å–∏—è: $WORKERNET_VERSION ‚Üí Lock: $lock_value"
    ok "Lock —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: $LOCK_FILE"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
finalize_installation() {
    create_env_file || return 1
    write_lock_file || return 1
    download_installer_phar || return 1
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –ü–û–°–õ–ï –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ (–∫—Ä–∏—Ç–∏—á–Ω–æ!)
    set_permissions || return 1
    
    show_credentials
    
    run_phar_installer || return 1
    
    return 0
}

# –ê–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å install.sh
setup_finalize() {
    finalize_installation
}

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏
export -f setup_firewall
export -f setup_firewall_debian
export -f setup_firewall_almalinux
export -f apply_iptables_rules
export -f create_env_file
export -f set_permissions
export -f download_installer_phar
export -f run_phar_installer
export -f show_credentials
export -f write_lock_file
export -f finalize_installation
export -f setup_finalize

